from math import sqrt
from statistics import mean


def MediaConhecida(media, TAmostra, desvio, NivelConfianca):
    IC = media + (TNormal(NivelConfianca) * (desvio / sqrt(TAmostra)))
    IC_N = media - (TNormal(NivelConfianca) * (desvio / sqrt(TAmostra)))
    return IC, IC_N


def MediaPopulacional(TAmostra, NivelConfianca, TAmostraDeSucesso):
    p = TAmostraDeSucesso / TAmostra
    IC = p + TNormal(NivelConfianca) * sqrt((p * (1 - p)) / TAmostra)
    IC_N = p - TNormal(NivelConfianca) * sqrt((p * (1 - p)) / TAmostra)

    return IC, IC_N


def Amostra(media, TAmostra, desvio, NivelConfianca):
    IC = media + (TStudent(NivelConfianca, TAmostra) * (desvio / sqrt(TAmostra)))
    IC_N = media - (TStudent(NivelConfianca, TAmostra) * (desvio / sqrt(TAmostra)))
    return IC, IC_N


def TNormal(nivel):
    table = [0.5000, 0.5040, 0.5080, 0.5120, 0.5160, 0.5199, 0.5239, 0.5279, 0.5319, 0.5359,
             0.5398, 0.5438, 0.5478, 0.5517, 0.5557, 0.5596, 0.5636, 0.5675, 0.5714, 0.5753,
             0.5793, 0.5832, 0.5871, 0.5910, 0.5948, 0.5987, 0.6026, 0.6064, 0.6103, 0.6141,
             0.6179, 0.6217, 0.6255, 0.6293, 0.6331, 0.6368, 0.6406, 0.6443, 0.6480, 0.6517,
             0.6554, 0.6591, 0.6628, 0.6664, 0.6700, 0.6736, 0.6772, 0.6808, 0.6844, 0.6879,
             0.6915, 0.6950, 0.6985, 0.7019, 0.7054, 0.7088, 0.7123, 0.7157, 0.7190, 0.7224,
             0.7257, 0.7291, 0.7324, 0.7357, 0.7389, 0.7422, 0.7454, 0.7486, 0.7517, 0.7549,
             0.7580, 0.7611, 0.7642, 0.7673, 0.7704, 0.7734, 0.7764, 0.7794, 0.7823, 0.7852,
             0.7881, 0.7910, 0.7939, 0.7967, 0.7995, 0.8023, 0.8051, 0.8078, 0.8106, 0.8133,
             0.8159, 0.8186, 0.8212, 0.8238, 0.8264, 0.8289, 0.8315, 0.8340, 0.8365, 0.8389,
             0.8413, 0.8438, 0.8461, 0.8485, 0.8508, 0.8531, 0.8554, 0.8577, 0.8599, 0.8621,
             0.8643, 0.8665, 0.8686, 0.8708, 0.8729, 0.8749, 0.8770, 0.8790, 0.8810, 0.8830,
             0.8849, 0.8869, 0.8888, 0.8907, 0.8925, 0.8944, 0.8962, 0.8980, 0.8997, 0.9015,
             0.9032, 0.9049, 0.9066, 0.9082, 0.9099, 0.9115, 0.9131, 0.9147, 0.9162, 0.9177,
             0.9192, 0.9207, 0.9222, 0.9236, 0.9251, 0.9265, 0.9279, 0.9292, 0.9306, 0.9319,
             0.9332, 0.9345, 0.9357, 0.9370, 0.9382, 0.9394, 0.9406, 0.9418, 0.9429, 0.9441,
             0.9452, 0.9463, 0.9474, 0.9484, 0.9495, 0.9505, 0.9515, 0.9525, 0.9535, 0.9545,
             0.9554, 0.9564, 0.9573, 0.9582, 0.9591, 0.9599, 0.9608, 0.9616, 0.9625, 0.9633,
             0.9641, 0.9649, 0.9656, 0.9664, 0.9671, 0.9678, 0.9686, 0.9693, 0.9699, 0.9706,
             0.9713, 0.9719, 0.9726, 0.9732, 0.9738, 0.9744, 0.9750, 0.9756, 0.9761, 0.9767,
             0.9772, 0.9778, 0.9783, 0.9788, 0.9793, 0.9798, 0.9803, 0.9808, 0.9812, 0.9817,
             0.9821, 0.9826, 0.9830, 0.9834, 0.9838, 0.9842, 0.9846, 0.9850, 0.9854, 0.9857,
             0.9861, 0.9864, 0.9868, 0.9871, 0.9875, 0.9878, 0.9881, 0.9884, 0.9887, 0.9890,
             0.9893, 0.9896, 0.9898, 0.9901, 0.9904, 0.9906, 0.9909, 0.9911, 0.9913, 0.9916,
             0.9918, 0.9920, 0.9922, 0.9925, 0.9927, 0.9929, 0.9931, 0.9932, 0.9934, 0.9936,
             0.9938, 0.9940, 0.9941, 0.9943, 0.9945, 0.9946, 0.9948, 0.9949, 0.9951, 0.9952,
             0.9953, 0.9955, 0.9956, 0.9957, 0.9959, 0.9960, 0.9961, 0.9962, 0.9963, 0.9964,
             0.9965, 0.9966, 0.9967, 0.9968, 0.9969, 0.9970, 0.9971, 0.9972, 0.9973, 0.9974,
             0.9974, 0.9975, 0.9976, 0.9977, 0.9977, 0.9978, 0.9979, 0.9979, 0.9980, 0.9981,
             0.9981, 0.9982, 0.9982, 0.9983, 0.9984, 0.9984, 0.9985, 0.9985, 0.9986, 0.9986,
             0.9987, 0.9987, 0.9987, 0.9988, 0.9988, 0.9989, 0.9989, 0.9989, 0.9990, 0.9990,
             0.9990, 0.9991, 0.9991, 0.9991, 0.9992, 0.9992, 0.9992, 0.9992, 0.9993, 0.9993,
             0.9993, 0.9993, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9995, 0.9995, 0.9995,
             0.9995, 0.9995, 0.9995, 0.9996, 0.9996, 0.9996, 0.9996, 0.9996, 0.9996, 0.9997,
             0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9998,
             0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998, 0.9998,
             0.9998, 0.9998, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
             0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
             0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999, 0.9999,
             1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, ]

    nivel /= 100
    Result = 3.99
    for i in range(400):
        if table[i] > nivel:
            Result -= 0.01

    return Result


def TStudent(nivel, n):
    tableS = [
        0.0787, 0.1584, 0.3249, 0.5095, 0.7265, 1.0000, 1.3764, 1.9626, 3.0777, 6.3138, 12.7062, 31.8205, 63.657,
        636.619,
        0.0708, 0.1421, 0.2887, 0.4447, 0.6172, 0.8165, 1.0607, 1.3862, 1.8856, 2.9200, 4.3027, 6.9646, 9.9248, 31.5991,
        0.0681, 0.1366, 0.2767, 0.4242, 0.5844, 0.7649, 0.9785, 1.2498, 1.6377, 2.3534, 3.1824, 4.5407, 5.8409, 12.9240,
        0.0667, 0.1338, 0.2707, 0.4142, 0.5686, 0.7407, 0.9410, 1.1896, 1.5332, 2.1318, 2.7764, 3.7469, 4.6041, 8.6103,
        0.0659, 0.1322, 0.2672, 0.4082, 0.5594, 0.7267, 0.9195, 1.1558, 1.4759, 2.0150, 2.5706, 3.3649, 4.0321, 6.8688,
        0.0654, 0.1311, 0.2648, 0.4043, 0.5534, 0.7176, 0.9057, 1.1342, 1.4398, 1.9432, 2.4469, 3.1427, 3.7074, 5.9588,
        0.0650, 0.1303, 0.2632, 0.4015, 0.5491, 0.7111, 0.8960, 1.1192, 1.4149, 1.8946, 2.3646, 2.9980, 3.4995, 5.4079,
        0.0647, 0.1297, 0.2619, 0.3995, 0.5459, 0.7064, 0.8889, 1.1081, 1.3968, 1.8595, 2.3060, 2.8965, 3.3554, 5.0413,
        0.0645, 0.1293, 0.2610, 0.3979, 0.5435, 0.7027, 0.8834, 1.0997, 1.3830, 1.8331, 2.2622, 2.8214, 3.2498, 4.7809,
        0.0643, 0.1289, 0.2602, 0.3966, 0.5415, 0.6998, 0.8791, 1.0931, 1.3722, 1.8125, 2.2281, 2.7638, 3.1693, 4.5869,
        0.0642, 0.1286, 0.2596, 0.3956, 0.5399, 0.6974, 0.8755, 1.0877, 1.3634, 1.7959, 2.2010, 2.7181, 3.1058, 4.4370,
        0.0640, 0.1283, 0.2590, 0.3947, 0.5386, 0.6955, 0.8726, 1.0832, 1.3562, 1.7823, 2.1788, 2.6810, 3.0545, 4.3178,
        0.0639, 0.1281, 0.2586, 0.3940, 0.5375, 0.6938, 0.8702, 1.0795, 1.3502, 1.7709, 2.1604, 2.6503, 3.0123, 4.2208,
        0.0638, 0.1280, 0.2582, 0.3933, 0.5366, 0.6924, 0.8681, 1.0763, 1.3450, 1.7613, 2.1448, 2.6245, 2.9768, 4.1405,
        0.0638, 0.1278, 0.2579, 0.3928, 0.5357, 0.6912, 0.8662, 1.0735, 1.3406, 1.7531, 2.1314, 2.6025, 2.9467, 4.0728,
        0.0637, 0.1277, 0.2576, 0.3923, 0.5350, 0.6901, 0.8647, 1.0711, 1.3368, 1.7459, 2.1199, 2.5835, 2.9208, 4.0150,
        0.0636, 0.1276, 0.2573, 0.3919, 0.5344, 0.6892, 0.8633, 1.0690, 1.3334, 1.7396, 2.1098, 2.5669, 2.8982, 3.9651,
        0.0636, 0.1274, 0.2571, 0.3915, 0.5338, 0.6884, 0.8620, 1.0672, 1.3304, 1.7341, 2.1009, 2.5524, 2.8784, 3.9216,
        0.0635, 0.1274, 0.2569, 0.3912, 0.5333, 0.6876, 0.8610, 1.0655, 1.3277, 1.7291, 2.0930, 2.5395, 2.8609, 3.8834,
        0.0635, 0.1273, 0.2567, 0.3909, 0.5329, 0.6870, 0.8600, 1.0640, 1.3253, 1.7247, 2.0860, 2.5280, 2.8453, 3.8495,
        0.0635, 0.1272, 0.2566, 0.3906, 0.5325, 0.6864, 0.8591, 1.0627, 1.3232, 1.7207, 2.0796, 2.5176, 2.8314, 3.8193,
        0.0634, 0.1271, 0.2564, 0.3904, 0.5321, 0.6858, 0.8583, 1.0614, 1.3212, 1.7171, 2.0739, 2.5083, 2.8188, 3.7921,
        0.0634, 0.1271, 0.2563, 0.3902, 0.5317, 0.6853, 0.8575, 1.0603, 1.3195, 1.7139, 2.0687, 2.4999, 2.8073, 3.7676,
        0.0634, 0.1270, 0.2562, 0.3900, 0.5314, 0.6848, 0.8569, 1.0593, 1.3178, 1.7109, 2.0639, 2.4922, 2.7969, 3.7454,
        0.0633, 0.1269, 0.2561, 0.3898, 0.5312, 0.6844, 0.8562, 1.0584, 1.3163, 1.7081, 2.0595, 2.4851, 2.7874, 3.7251,
        0.0633, 0.1269, 0.2560, 0.3896, 0.5309, 0.6840, 0.8557, 1.0575, 1.3150, 1.7056, 2.0555, 2.4786, 2.7787, 3.7066,
        0.0633, 0.1268, 0.2559, 0.3894, 0.5306, 0.6837, 0.8551, 1.0567, 1.3137, 1.7033, 2.0518, 2.4727, 2.7707, 3.6896,
        0.0633, 0.1268, 0.2558, 0.3893, 0.5304, 0.6834, 0.8546, 1.0560, 1.3125, 1.7011, 2.0484, 2.4671, 2.7633, 3.6739,
        0.0633, 0.1268, 0.2557, 0.3892, 0.5302, 0.6830, 0.8542, 1.0553, 1.3114, 1.6991, 2.0452, 2.4620, 2.7564, 3.6594,
        0.0632, 0.1267, 0.2556, 0.3890, 0.5300, 0.6828, 0.8538, 1.0547, 1.3104, 1.6973, 2.0423, 2.4573, 2.7500, 3.6460,
        0.0630, 0.1262, 0.2545, 0.3872, 0.5272, 0.6786, 0.8477, 1.0455, 1.2958, 1.6706, 2.0003, 2.3901, 2.6603, 3.4602,
        0.0629, 0.1260, 0.2541, 0.3866, 0.5263, 0.6772, 0.8456, 1.0424, 1.2910, 1.6620, 1.9867, 2.3685, 2.6316, 3.4019,
        0.0628, 0.1259, 0.2539, 0.3862, 0.5258, 0.6765, 0.8446, 1.0409, 1.2886, 1.6577, 1.9799, 2.3578, 2.6174, 3.3735,
        0.0628, 0.1259, 0.2538, 0.3861, 0.5255, 0.6761, 0.8440, 1.0400, 1.2872, 1.6551, 1.9759, 2.3515, 2.6090, 3.3566,
        0.0628, 0.1258, 0.2537, 0.3859, 0.5253, 0.6759, 0.8436, 1.0394, 1.2863, 1.6534, 1.9732, 2.3472, 2.6034, 3.3454,
        0.0628, 0.1258, 0.2537, 0.3858, 0.5252, 0.6757, 0.8433, 1.0390, 1.2856, 1.6521, 1.9713, 2.3442, 2.5994, 3.3375,
        0.0628, 0.1258, 0.2536, 0.3858, 0.5251, 0.6755, 0.8431, 1.0387, 1.2851, 1.6512, 1.9699, 2.3420, 2.5965, 3.3315,
        0.0628, 0.1258, 0.2536, 0.3857, 0.5250, 0.6754, 0.8430, 1.0384, 1.2847, 1.6505, 1.9688, 2.3402, 2.5942, 3.3269,
        0.0628, 0.1258, 0.2536, 0.3857, 0.5250, 0.6753, 0.8428, 1.0382, 1.2844, 1.6499, 1.9679, 2.3388, 2.5923, 3.3233,
        0.0627, 0.1257, 0.2535, 0.3856, 0.5248, 0.6751, 0.8425, 1.0378, 1.2837, 1.6487, 1.9659, 2.3357, 2.5882, 3.3150,
        0.0627, 0.1257, 0.2535, 0.3855, 0.5247, 0.6750, 0.8423, 1.0375, 1.2832, 1.6479, 1.9647, 2.3338, 2.5857, 3.3101,
        0.0627, 0.1257, 0.2534, 0.3855, 0.5246, 0.6748, 0.8421, 1.0371, 1.2826, 1.6468, 1.9629, 2.3310, 2.5820, 3.3027,
        0.0627, 0.1257, 0.2534, 0.3854, 0.5246, 0.6747, 0.8420, 1.0370, 1.2824, 1.6464, 1.9623, 2.3301, 2.5808, 3.3003]
    linha = 0
    nivel = 100 - nivel
    nivel /= 100
    Vet_Grau = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                29, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 400, 500, 800, 1000]

    Vet_Significancia = [0.95, 0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10, 0.05, 0.02, 0.01, 0.001]

    for i in range(43):
        if Vet_Grau[i] < (n - 1):
            linha += 10

    for i in range(14):
        if Vet_Significancia[i] > nivel:
            linha += 1

    return tableS[linha]
